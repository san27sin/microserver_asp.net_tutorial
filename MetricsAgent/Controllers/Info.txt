
    //создадим класс для разбора
    //в конце название класса лучше добавлять Controller
    //каждый контроллер содержит определенный метод

    //http запрос помимо заголовка может еще содержать тело сообщения

    //На каждом контроллере у нас могут быть какие-то методы которые обрабатывают http запросы

    /*Для того чтобы http запрос определился где вызывать ему метод (одинаковый метод может быть в разных контроллерах),
     * есть понятие маршрутизатор который мы прописываем ввиде атрибута указывает на определенный контролер и метод (прописываем
     * его в атрибуте route[])?, то есть каждому контроллеру мы можем прописать уникальное имя в маршрутизаторе
     * 
     * Добавление CRUD методов - как с базой данных
     * 
     * RestFullApi - это некие обязательства
     * 
     * !!! Если не указываем маршрутизацию, то тогда конечный маршрут составляется именем метода
     *  
     *  IActionResult - интерфейс представляет из себя служебный интерфейс который имплментирует объект содержащий статус код ответа на запрос
     *
     * [FromQuery] - атрибут, есть еще FromBody, FromRoute
     * 
     * Если у нас публичный метод в контроллере, то мы обязаны указать какого он типа, надо добавить атрибут
     * httpGet/httpPost. Если это не сделать то swagger в качестве open api не сможет коммуницировать, 
     * произойдет исключение.
     * 
     * При запуске, swagger создает клиента в браузере
     * 
     * AddOpenAPI - дает возможность генерации JSON файла с помощью которого строится клиент
     *
     *Если к нашему сервесу обращаются 100 клиентов, то для каждого запроса создается новый
     *экземпляр контроллера

     Модуль это некий сервес (класс), это имплементация нашей абстракции(интерфейса)
     Абстракция - это некий сервис, это как интерфейс

     Правильный подход указывать не конкретный тип, а абстракцию. То есть обращаться через наш интерфейс. Таким образом наши модули не зависят друг от друга.

     